{
  "hash": "578c73fb667b43619891eb9bb79bdd83",
  "result": {
    "markdown": "---\ntitle: \"Creating dual y-axis plots with ggplot2\"\ndate: \"2023-01-30\"\ncategories: [ggplot2, dataviz]\ndescription: 'Sometimes one y-axis just does not suffice'\ndraft: false\n---\n\n\n\nEvery now and then I find myself in a situation where I need to create a plot with dual y-axes. However, this seems to happen rarely enough, that I end up frantically googling for advice. Now, creating that secondary y-axis ain't exactly rocket science, but anyone who has been using [ggplot2](https://ggplot2.tidyverse.org/) will tell you that it is not trivial either. To save myself the trouble of having to look for advice in the future, I will show how it can be done with a few simple steps.\n\n\n# Visualizing wind and pressure measurements for a storm\n\nLet's use a  toy example where a dual y-axis plot might be needed. Let's first load the `storms` data that ships with the [dplyr package](https://dplyr.tidyverse.org/reference/storms.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\n\ndata(storms)\n\nglimpse(storms)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 11,859\nColumns: 13\n$ name                         <chr> \"Amy\", \"Amy\", \"Amy\", \"Amy\", \"Amy\", \"Amy\",…\n$ year                         <dbl> 1975, 1975, 1975, 1975, 1975, 1975, 1975,…\n$ month                        <dbl> 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,…\n$ day                          <int> 27, 27, 27, 27, 28, 28, 28, 28, 29, 29, 2…\n$ hour                         <dbl> 0, 6, 12, 18, 0, 6, 12, 18, 0, 6, 12, 18,…\n$ lat                          <dbl> 27.5, 28.5, 29.5, 30.5, 31.5, 32.4, 33.3,…\n$ long                         <dbl> -79.0, -79.0, -79.0, -79.0, -78.8, -78.7,…\n$ status                       <chr> \"tropical depression\", \"tropical depressi…\n$ category                     <ord> -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, …\n$ wind                         <int> 25, 25, 25, 25, 25, 25, 25, 30, 35, 40, 4…\n$ pressure                     <int> 1013, 1013, 1013, 1013, 1012, 1012, 1011,…\n$ tropicalstorm_force_diameter <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ hurricane_force_diameter     <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n```\n:::\n:::\n\n\nWe are dealing with data related to storms. Let's try and see how `wind` and `pressure` develop over time for the `Amy` storm.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# modified data\nmod_storms <- storms %>% \n  filter(name == \"Amy\") %>%\n  mutate(date_hour = paste(year,month,day, sep = \"-\") %>% \n           paste(., hour, sep = \" \"), .after = \"name\") %>% \n  mutate(date_hour = as_datetime(date_hour, format = \"%Y-%m-%d %H\"))\n\ntheme_set(theme_minimal())\n\n# plot wind and pressure\nmod_storms  %>% \n  pivot_longer(cols = c(\"wind\", \"pressure\"), names_to = \"phenomenon\", values_to = \"measurement\") %>%\n  ggplot(aes(x = date_hour, y = measurement, lty = phenomenon)) +\n  geom_line() +\n  labs(x = \"\", y = \"Measurement value\")\n```\n\n::: {.cell-output-display}\n![Wind speed and air pressure changes for the Amy storm.](03-dual-axis-plots_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nAlthough probably not a perfect example, we can still see that comparing the development of wind and pressure as the storm advances is not very easy from this plot. Also, the y-axis is missing units, which happen to be different for these two measurements.\n\n## Re-organizing the plot via faceting\n\nLet's re-plot the data by using two y-axes. The easiest way to do this with `ggplot2` is by using faceting.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot wind and pressure\nmod_storms  %>% \n  pivot_longer(cols = c(\"wind\", \"pressure\"), names_to = \"phenomenon\", values_to = \"measurement\") %>%\n  ggplot(aes(x = date_hour, y = measurement, lty = phenomenon)) +\n  geom_line() +\n  facet_grid(phenomenon ~ ., scales = \"free_y\") +\n  labs(x = \"\", y = \"Measurement value\") +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![Wind and air pressure changes for the Amy storm divided into two different plots.](03-dual-axis-plots_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nThe data is now faceted into two separate panes. This let's us scale the y-axes independently, which already makes it easier to see that wind speeds are going up as the pressure is dropping. What we are still missing though, are the units on the y-axis. Let's create one more iteration of this plot.\n\n## Two y-axes\n\nOne place to look for inspiration regarding plots is [The R Graph Gallery](https://r-graph-gallery.com/index.html). This wonderful website also has an example for creating [a plot with a dual y-axis](https://r-graph-gallery.com/line-chart-dual-Y-axis-ggplot2.html). Let's walk through the process with our storm data. We'll start by looking at the data we plan to plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_storms %>% \n  select(date_hour, wind, pressure) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  date_hour            wind pressure\n  <dttm>              <int>    <int>\n1 1975-06-27 00:00:00    25     1013\n2 1975-06-27 06:00:00    25     1013\n3 1975-06-27 12:00:00    25     1013\n4 1975-06-27 18:00:00    25     1013\n5 1975-06-28 00:00:00    25     1012\n6 1975-06-28 06:00:00    25     1012\n```\n:::\n:::\n\n\nWe can see that there is quite a difference in the magnitude of the numeric values for `wind` and `pressure`. The approach for creating a secondary y-axis is somewhat artificial, and what we actually need to do is to scale one of the y-axis columns to have a similar range with the other column. Let's start by finding the maximum values for `wind` and `pressure`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax_wind <- max(mod_storms$wind)\n\nmax_pressure <- max(mod_storms$pressure)\n\n# scale wind values\nmod_storms2 <- mod_storms %>% \n  select(date_hour, wind, pressure) %>% \n  mutate(scaled_wind1 = wind/max_wind,\n         scaled_wind2 = max_pressure*wind/max_wind, .after = wind)\n\nhead(mod_storms2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  date_hour            wind scaled_wind1 scaled_wind2 pressure\n  <dttm>              <int>        <dbl>        <dbl>    <int>\n1 1975-06-27 00:00:00    25        0.417         422.     1013\n2 1975-06-27 06:00:00    25        0.417         422.     1013\n3 1975-06-27 12:00:00    25        0.417         422.     1013\n4 1975-06-27 18:00:00    25        0.417         422.     1013\n5 1975-06-28 00:00:00    25        0.417         422.     1012\n6 1975-06-28 06:00:00    25        0.417         422.     1012\n```\n:::\n:::\n\n\nNow we have scaled the `wind` values to have a maximum value of `1` and also to have the same largest value as the `pressure` values. We could have also scaled the pressure values as well. The choice was arbitrary. Now we can see that the values can be easily plotted on the same scale.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot wind and pressure\nmod_storms2  %>% \n  pivot_longer(cols = c(\"scaled_wind2\", \"pressure\"), names_to = \"phenomenon\", values_to = \"measurement\") %>%\n  ggplot(aes(x = date_hour, y = measurement, lty = phenomenon)) +\n  geom_line() +\n  labs(x = \"\", y = \"Measurement value\")\n```\n\n::: {.cell-output-display}\n![Changes in wind speed and air pressure during the Amy storm. Wind speed values have been scaled to match the maximum air pressure values.](03-dual-axis-plots_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nBoth lines are now sharing the same y-axis. Now all we need to do is to show the wind speed values on the secondary y-axis. However, there is one improvement we can do while we are at it. In the plot above, the wind speed values have been scaled to match the maximum value of air pressure. We can see that for this particular data this is not a great choice, as the relative changes in the data are so different for the two phenomena. We can fix this by changing the scaling so that the range of wind speed values matches the range of air pressure values. \n\nThe secondary y-axis can be introduced by using the `sec_axis()` function. We need to do an inverse scaling for the y-label values to display the original wind speeds.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# rescale wind data between min and max of pressure\nmin_pressure <- min(mod_storms$pressure)\nmin_wind <- min(mod_storms$wind)\n\n# scale wind values\nmod_storms2 <- mod_storms %>% \n  select(date_hour, wind, pressure) %>% \n  mutate(scaled_wind1 = (wind - min_wind)/(max_wind  - min_wind),\n         scaled_wind2 = (max_pressure - min_pressure) * scaled_wind1 + min_pressure, .after = wind)\n\n\nmod_storms2  %>% \n  ggplot(aes(x = date_hour)) +\n  geom_line(aes(y = pressure)) + \n  geom_line(aes(y =  scaled_wind2), lty = 2, color = \"red\") + \n  scale_y_continuous(\n    # Features of the first axis\n    name = \"Pressure (mbar)\",\n    # Add a second axis and specify its features\n    sec.axis = sec_axis(\n        # inverse transformation of scaled wind speeds for secondary y-axis\n      ~ (. - min_pressure)*(max_wind - min_wind)/(max_pressure - min_pressure) + min_wind, \n      name = \"Wind speed (knots)\"\n      )\n  ) +\n  labs(x = element_blank())\n```\n\n::: {.cell-output-display}\n![Changes in wind speed (red dashed line) and air pressure (black solid line) during the Amy storm. Wind speed values have been scaled to match the air pressure value range. The labels for the secondary y-axis have undergone inverse scaling to show the unchanged wind speed values.](03-dual-axis-plots_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nNow we can see both lines plotted in the same graph, and we have an individual y-axis to show independent values and units for the two phenomena. This makes it easy to compare the lines.\n\n# Final thoughts\n\nNow, it is good to keep in mind that this type of a plot may be misleading at times. For example here, the relative changes for the two phenomena are quite different, which is not apparent at a first glance of the above plot. So best be mindful when to use this type of a plot. As a rule of thumb, I would say that usually faceting will do the trick. That being said, in my opinion there is a time and a place for a dual y-axis as well. So it is good to know how to do it.\n",
    "supporting": [
      "03-dual-axis-plots_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}